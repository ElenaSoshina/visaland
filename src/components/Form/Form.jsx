import React, { forwardRef, useState } from "react";
import { useForm } from "react-hook-form";
import styles from "./Form.module.css";
import { sendMessageToTelegram } from "../utils/telegramAPI";
import { motion } from "framer-motion";

const Form = forwardRef((props, ref) => {
    const {
        register,
        handleSubmit,
        formState: { errors },
        reset
    } = useForm();

    const [isPopupOpen, setIsPopupOpen] = useState(false);

    const onSubmit = async (data) => {
        console.log("–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", data);

        const messageData = {
            name: data.name,
            phone: data.phone,
            comment: data.comment || "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è",
        };

        const success = await sendMessageToTelegram(messageData);

        if (success) {
            setIsPopupOpen(true);
            reset(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        } else {
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        }
    };

    const handlePopupClose = () => {
        setIsPopupOpen(false);
    };

    return (
        <section ref={ref} id="application-form" className={styles.formSection}>
            <div className={styles.container}>
                <h2 className={styles.title}>
                    –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π –∏ –ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç
                </h2>
                <p className={styles.subtitle}>
                    –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.
                </p>

                <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>
                    {/* –ü–æ–ª–µ –ò–º—è */}
                    <input
                        type="text"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                        className={styles.input}
                        {...register("name", { required: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" })}
                    />
                    {errors.name && <p className={styles.error}>{errors.name.message}</p>}

                    {/* –ü–æ–ª–µ –¢–µ–ª–µ—Ñ–æ–Ω */}
                    <input
                        type="tel"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω"
                        className={styles.input}
                        {...register("phone", {
                            required: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω",
                            pattern: {
                                value: /^\+7\s?\(\d{3}\)\s?\d{3}-\d{2}-\d{2}$/,
                                message: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                            }
                        })}
                    />
                    {errors.phone && <p className={styles.error}>{errors.phone.message}</p>}

                    {/* –ü–æ–ª–µ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
                    <textarea
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                        className={styles.textarea}
                        {...register("comment")}
                    />

                    {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
                    <button type="submit" className={styles.button}>
                        üìû –ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                    </button>
                </form>
            </div>

            {/* Popup */}
            {isPopupOpen && (
                <div className={styles.popupOverlay}>
                    <motion.div
                        initial={{ opacity: 0, scale: 0.8 }}
                        animate={{ opacity: 1, scale: 1 }}
                        exit={{ opacity: 0, scale: 0.8 }}
                        className={styles.popup}
                    >
                        <h3>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h3>
                        <p>–° –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
                        <button className={styles.popupButton} onClick={handlePopupClose}>
                            –û–ö
                        </button>
                    </motion.div>
                </div>
            )}
        </section>
    );
});

export default Form;
